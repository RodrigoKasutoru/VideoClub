create database VideoClub
use VideoClub

/*Tabla de roles de vendedores y administradores*/
create table Rol(
Id_rol int not null identity(1,1) primary key,
descripcion_rol varchar(20) not null,
)
/*Tabla de informacion de los trabajadores */
create table Trabajadores(
Id_Trabajador int not null identity(1,1) primary key,
Nombre varchar(50) not null,
ApellidoP varchar(50) not null,
ApellidoM varchar(50) not null,
Edad varchar(10) not null,
FechaNacimiento varchar(50) not null,
Direccion varchar(50) not null,
Colonia  varchar(50) not null,
codigoPostal varchar(50) not null,
Telefono varchar(50),
Celular varchar(50),
RFC varchar(50),
usuario varchar(50) not null,
password varchar(50) not null,
foto varchar(50) not null,
fk_rol int not null,
foreign key(fk_rol) references Rol (Id_rol)

)
/*Tabla de informacion de los miembros*/
create table Miembros(
Id_miembro int not null identity(1,1) primary key ,
Nombre varchar(50) not null,
ApellidoP varchar(50) not null,
ApellidoM varchar(50) not null,
Edad varchar(10) not null,
FechaNacimiento varchar(50) not null,
Direccion varchar(50) not null,
Colonia  varchar(50) not null,
codigoPostal varchar(50) not null,
Telefono varchar(50) not null,
Celular varchar(50) not null,
foto varchar(50) not null

)
/*Tabla de informacion de las peliculas*/
create table Peliculas(
Id_pelicula int not null identity(1,1) primary key,
titulo varchar(max) not null,
genero varchar(50) not null,
clasificacion varchar(50) not null,
año varchar(50) not null,
idioma varchar(50) not null,
formato varchar(50) not null,
reseña varchar(max) not null,
stock int not null,
precionRenta int,
precioVenta int,
Imagen varchar(max) not null
)
/*Tabla de accesorios a vender independiente a las  peliculas*/
create table Vetados(
Id_vetado int not null identity(1,1) primary key,
fk_miembro int not null, 
fecha varchar(50) not null,
sancion int not null,
foreign key(fk_miembro) references Miembros (Id_miembro)
)
/*Tabla de alquileres de peliculas*/
create table Alquiler(
id_alquiler int not null identity(1,1) primary key,
fk_pelicula int not null,
fk_Trabajador int not null,
fk_miembro int not null,
cantidad int not null,
precioFinal int not null,
fechaRenta varchar(50) not null,
fechaEntrega varchar(50) not null,
devuelta varchar(3) not null,
foreign key(fk_pelicula) references Peliculas (Id_pelicula),
foreign key(fk_Trabajador) references Trabajadores (Id_Trabajador),
foreign key(fk_miembro) references Miembros (Id_miembro)
)

/*Tabla de accesorios*/
create table Accesorios(
Id_accesorio int not null identity(1,1) primary key,
Nombre varchar(50) not null,
Descripcion varchar(50) not null,
cantidad int not null,
precio int not null,
Imagen varchar(max) not null

)
/*Tabla de ventas de peliculas*/
create table VentasPeliculas(
Id_ventaPelicula int not null identity(1,1) primary key,
fk_pelicula int not null,
fk_Trabajador int not null,
cantidad int not null,
precioFinal int not null,
fechaVenta varchar(50) not null,
foreign key(fk_pelicula) references Peliculas (Id_pelicula),
foreign key(fk_Trabajador) references Trabajadores (Id_Trabajador)

)
/*Tabla de ventas accesorios*/
create table VentaAccesorios(
Id_ventaAccesorios int not null identity(1,1) primary key,
fk_accesorio int not null,
fk_Trabajador int not null,
cantidad int not null,
precioFinal int not null,
fechaVenta varchar(50) not null,
imagen varchar(50),
foreign key(fk_accesorio) references Accesorios (Id_accesorio),
foreign key(fk_Trabajador) references Trabajadores (Id_Trabajador)
)
create table caja(
Id_caja int not null identity(1,1) primary key,
Saldo_Inicial int not null,
saldo_Actual int not null,
saldo_final int not null,
dia varchar(50) not null,
)